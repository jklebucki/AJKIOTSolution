@page "/devices"
@using AJKIOT.Shared.Models
@using AJKIOT.Web.Pages.Device
@using AJKIOT.Web.Services
@inject IApiService api

<PageTitle>Devices</PageTitle>

<h1>Devices</h1>

<p>Your devices</p>

<div class="device-tile">
    <Switch @bind-IsOn="@SwitchState" />
    <Dial Rotation="@rotation" RotationChanged="@((newRotation) => rotation = newRotation)"></Dial>
    <h3>Aktualna rotacja: @rotation stopni</h3>
    <RotarySwitch @bind-Position="@RotarySwitchPosition" Positions="5" />
</div>

@if (devices == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>DeviceFeaturesJson</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var device in devices)
            {
                <tr>
                    <td>@device.DeviceId</td>
                    <td>@device.DeviceName</td>
                    <td>@device.DeviceFeaturesJson</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private double rotation;
    private bool SwitchState = false;
    private int DialValue = 90;
    private int RotarySwitchPosition = 4;

    private IEnumerable<IotDevice> devices = null;

    protected override async Task OnInitializedAsync()
    {
        devices = await api.GetDeviceStatusAsync(0);
    }

    private void ResetRotation()
    {
        rotation = 33; // Resetuj obrót do pozycji początkowej
    }
    
}
